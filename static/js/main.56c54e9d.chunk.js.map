{"version":3,"sources":["assets/icons/heart.svg","assets/icons/heart-empty.svg","assets/icons/message.svg","assets/icons/link.svg","assets/icons/burger-close.svg","assets/icons/burger-open.svg","serviceWorker.js","context/index.js","components/Joke/Joke.js","components/Form/Form.js","components/Burger/Burger.js","containers/Main/Main.js","containers/Favourite/Favourite.js","views/App/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Context","React","createContext","Joke","item","isFavourite","favouriteContext","useContext","useState","isFavouriteItem","setFavourites","useEffect","favourites","JSON","parse","localStorage","getItem","isFavouriteEl","length","some","el","id","hours","milliseconds","Math","abs","Date","updated_at","floor","countHoursAgo","className","src","heartImg","heartEmptyImg","alt","onClick","newFavourites","filter","setItem","stringify","setFauvorites","messageImg","href","target","rel","linkImg","value","categories","baseUrl","Form","setJokes","query","setQuery","setCategories","category","setCategory","option","setOption","getCategories","a","axios","get","res","responce","data","slice","console","log","setOptionChange","tags","map","key","uid","type","submitForm","event","preventDefault","url","result","onSubmit","method","name","checked","onChange","minLength","placeholder","disabled","Burger","isMenuOpened","setMenuStatus","isFavourites","openImg","closeImg","Main","jokes","jokeItems","const","Favourite","items","App","Provider","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.56c54e9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.2cedafc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-empty.e977fb9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/message.4a89a057.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.dc9befa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger-close.dbd9017e.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger-open.358f75fe.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nexport const Context = React.createContext();","import \"./index.scss\";\r\nimport heartImg from \"../../assets/icons/heart.svg\";\r\nimport heartEmptyImg from \"../../assets/icons/heart-empty.svg\";\r\nimport messageImg from \"../../assets/icons/message.svg\";\r\nimport linkImg from \"../../assets/icons/link.svg\";\r\n\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Context } from \"../../context\";\r\n\r\nconst Joke = ({ item, isFavourite }) => {\r\n  const favouriteContext = useContext(Context);\r\n\r\n  const [isFavouriteItem, setFavourites] = useState(false);\r\n  function countHoursAgo() {\r\n    const milliseconds = Math.abs(new Date(item.updated_at) - new Date());\r\n    const hours = Math.floor(milliseconds / 36e5);\r\n\r\n    return hours;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const favourites = JSON.parse(localStorage.getItem(\"favourites\")) || [];\r\n    const isFavouriteEl =\r\n      favourites.length > 0\r\n        ? favourites.some((el) => el.id === item.id)\r\n        : false;\r\n    setFavourites(isFavouriteEl);\r\n\r\n  }, [item.id]);\r\n\r\n  const addFavourite = () => {\r\n    const favourites = localStorage.getItem(\"favourites\")\r\n      ? JSON.parse(localStorage.getItem(\"favourites\"))\r\n      : [];\r\n\r\n    let newFavourites = favourites.some((el) => el.id === item.id)\r\n      ? favourites.filter((el) => el.id !== item.id)\r\n      : [item, ...favourites];\r\n\r\n    localStorage.setItem(\"favourites\", JSON.stringify(newFavourites));\r\n    setFavourites(!isFavouriteItem);\r\n    favouriteContext.setFauvorites(newFavourites);\r\n  };\r\n\r\n  const hours = countHoursAgo();\r\n\r\n\r\n  return (\r\n    <article\r\n      className={`joke ${isFavourite ? \"joke--favourite\" : \"joke--main\"}`}\r\n    >\r\n      <img\r\n        src={isFavouriteItem ? heartImg : heartEmptyImg}\r\n        alt=\"heart\"\r\n        className={`joke__heart ${isFavourite ? \"joke__heart--favourite\" : \"joke__heart--main\"}`}\r\n        onClick={addFavourite}\r\n      />\r\n      <div className={`joke__box`}>\r\n        <div\r\n          className={`joke__message ${\r\n            isFavourite ? \"joke__message--favourite\" : \"joke__message--main\"\r\n          }`}\r\n        >\r\n          <img src={messageImg} alt=\"message\" />\r\n        </div>\r\n        <p className={`joke__id`}>\r\n          ID:\r\n          <a\r\n            href={`https://api.chucknorris.io/jokes/${item.id}`}\r\n            className={`joke__id joke__id--blue`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {item.id}\r\n            <img src={linkImg} alt=\"link\" className={`joke__link`} />\r\n          </a>\r\n        </p>\r\n        <p\r\n          className={`joke__text ${\r\n            isFavourite ? \"joke__text--favourite\" : \"joke__text--main\"\r\n          }`}\r\n        >\r\n          {item.value}\r\n        </p>\r\n        <div\r\n          className={`joke__bottom ${\r\n            isFavourite ? \"joke__bottom--favourite\" : \"joke__bottom--main\"\r\n          }`}\r\n        >\r\n          <p className={`joke__update`}>Last update: {hours} hours ago</p>\r\n          {!isFavourite && item.categories[0] && (\r\n            <p className={`joke__option joke__category`}>\r\n              {item.categories[0]}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Joke;\r\n","import \"./index.scss\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport uid from \"uid\";\r\nimport axios from \"axios\";\r\nconst baseUrl = `https://api.chucknorris.io/jokes/`;\r\n\r\nconst Form = ({ setJokes }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(\"celebrity\");\r\n  const [option, setOption] = useState(2);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  const getCategories = async () => {\r\n    try {\r\n      const res = await axios.get(baseUrl + \"categories\");\r\n      const responce = res.data.slice(0, 4);\r\n\r\n      setCategories(responce);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const setOptionChange = (value) => {\r\n    setCategory(\"celebrity\");\r\n    setOption(+value);\r\n    setQuery(\"\");\r\n  };\r\n\r\n  const tags = categories.map((item) => (\r\n    <button\r\n      key={uid()}\r\n      type=\"button\"\r\n      className={`form__tag ${category === item && \"form__tag--active\"}`}\r\n      onClick={() => setCategory(item)}\r\n    >\r\n      {item}\r\n    </button>\r\n  ));\r\n\r\n  const submitForm = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const url =\r\n        option === 1\r\n          ? `random`\r\n          : option === 2\r\n          ? `random?category=${category}`\r\n          : `search?query=${query}`;\r\n\r\n      const res = await axios.get(baseUrl + url);\r\n      const data = option === 1 || option === 2 ? [res.data] : res.data.result;\r\n\r\n      setJokes(data);\r\n      setOptionChange(2);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={`form`} onSubmit={submitForm} method=\"GET\">\r\n      <label className={`form__label`}>\r\n        <input\r\n          type=\"radio\"\r\n          className={`form__input`}\r\n          name=\"option\"\r\n          value={1}\r\n          checked={option === 1}\r\n          onChange={(event) => setOptionChange(event.target.value)}\r\n        />\r\n        <span className={`form__design`}></span>\r\n        <span className={`form__text`}>Random</span>\r\n      </label>\r\n      <label className={`form__label`}>\r\n        <input\r\n          type=\"radio\"\r\n          className={`form__input`}\r\n          name=\"option\"\r\n          value={2}\r\n          checked={option === 2}\r\n          onChange={(event) => setOptionChange(event.target.value)}\r\n        />\r\n        <span className={`form__design`}></span>\r\n        <span className={`form__text`}>From caterogies</span>\r\n      </label>\r\n      {option === 2 && <div className={`form__tags`}>{tags}</div>}\r\n      <label className={`form__label`}>\r\n        <input\r\n          type=\"radio\"\r\n          className={`form__input`}\r\n          name=\"option\"\r\n          value={3}\r\n          checked={option === 3}\r\n          onChange={(event) => setOptionChange(event.target.value)}\r\n        />\r\n        <span className={`form__design`}></span>\r\n        <span className={`form__text`}>Search</span>\r\n      </label>\r\n      {option === 3 && (\r\n        <input\r\n          value={query}\r\n          type=\"text\"\r\n          minLength=\"3\"\r\n          className={`form__search`}\r\n          name=\"option\"\r\n          placeholder=\"Free text search\"\r\n          onChange={(event) => setQuery(event.target.value)}\r\n        />\r\n      )}\r\n      <button\r\n        type=\"submit\"\r\n        className={`form__button`}\r\n        disabled={option === 3 && query.length <= 3}\r\n      >\r\n        Get a joke\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./index.scss\";\r\nimport openImg from \"../../assets/icons/burger-close.svg\";\r\nimport closeImg from \"../../assets/icons/burger-open.svg\";\r\n\r\nimport React from \"react\";\r\n\r\nconst Burger = ({ isMenuOpened, setMenuStatus, isFavourites }) => {\r\n  return (\r\n    <button\r\n      className={`main__top-title ${isFavourites ? \"burger--favourite\" : null}`}\r\n      onClick={() => setMenuStatus(!isMenuOpened)}\r\n    >\r\n      <img src={isMenuOpened ? openImg : closeImg} alt=\"burger\" />\r\n      <span className={`main__top-title--text`}>Favourite</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import \"./index.scss\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Joke from \"../../components/Joke/Joke\";\r\nimport Form from \"../../components/Form\";\r\nimport uid from \"uid\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\n\r\nconst Main = ({ isMenuOpened, setMenuStatus }) => {\r\n  const [jokes, setJokes] = useState([]);\r\n  const jokeItems = jokes.map((item) => <Joke key={uid()} item={item} />);\r\n\r\n  return (\r\n    <main className={`main ${isMenuOpened ? \"main--hidden\" : null}`}>\r\n      <div className={`main__wrapper`}>\r\n        <div className={`main__top`}>\r\n          <h2 className={`main__logo`}>MSI 2020</h2>\r\n          {!isMenuOpened && (\r\n            <Burger isMenuOpened={isMenuOpened} setMenuStatus={setMenuStatus} />\r\n          )}\r\n        </div>\r\n        <div className={`main__heading`}>\r\n          <h1 className={`main__title`}>Hey!</h1>\r\n          <p className={`main__subtitle`}>Let’s try to find a joke for you:</p>\r\n        </div>\r\n        <Form const setJokes={setJokes} />\r\n        {jokes.length > 0 && <div className={`main__jokes`}>{jokeItems}</div>}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import \"./index.scss\";\r\n\r\nimport React, { useContext } from \"react\";\r\nimport Joke from \"../../components/Joke\";\r\nimport uid from \"uid\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport { Context } from \"../../context\";\r\n\r\nconst Favourite = ({ isMenuOpened, setMenuStatus }) => {\r\n  const favouriteContext = useContext(Context);\r\n\r\n  const items =\r\n    favouriteContext.favourites.length > 0\r\n      ? favouriteContext.favourites.map((item) => (\r\n          <Joke key={uid()} isFavourite item={item} />\r\n        ))\r\n      : [];\r\n\r\n  return (\r\n    <section className={`favourite ${isMenuOpened && \"favourite--show\"}`}>\r\n      <h2 className={`favourite__title`}>Favourite</h2>\r\n      <Burger\r\n        isMenuOpened={isMenuOpened}\r\n        setMenuStatus={setMenuStatus}\r\n        isFavourites={true}\r\n      />\r\n      <div className={`favourite__container`}>{items}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Favourite;\r\n","import \"./index.scss\";\r\nimport { Context } from \"../../context\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Main from \"../../containers/Main\";\r\nimport Favourite from \"../../containers/Favourite\";\r\n\r\nconst App = () => {\r\n  const [isMenuOpened, setMenuStatus] = useState(false);\r\n  const [favourites, setFauvorites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const newFavourites = JSON.parse(localStorage.getItem(\"favourites\"));\r\n    setFauvorites(newFavourites);\r\n  }, []);\r\n\r\n  return (\r\n    <Context.Provider value={{ favourites, setFauvorites }}>\r\n      <div className={`app ${isMenuOpened ? \"app--overflow\" : null}`}>\r\n        <Main isMenuOpened={isMenuOpened} setMenuStatus={setMenuStatus} />\r\n        <Favourite isMenuOpened={isMenuOpened} setMenuStatus={setMenuStatus} />\r\n        <div\r\n          className={`app__background ${\r\n            isMenuOpened ? \"app__background--active\" : null\r\n          }`}\r\n        ></div>\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"./assets/styles/main.scss\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./views/App/App\";\r\n\r\nReactDOM.render(\r\n  <>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}